package transf;

import de.tu_bs.cs.isf.mbse.ernaehrungsplan.metamodel.Ernaehrungsplan;
import de.tu_bs.cs.isf.mbse.ernaehrungsplan.metamodel.Person;
import java.io.File;
import java.io.FileOutputStream;
import java.util.List;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xbase.lib.Exceptions;
import transf.ModelLoader;

@SuppressWarnings("all")
public class M2T {
  private ModelLoader loader = new ModelLoader();
  
  private List<Person> persons;
  
  private Ernaehrungsplan plan;
  
  private File targetLatexFile;
  
  private File targetHtmlFile_EP;
  
  private File targetHtmlFile_EL;
  
  private FileOutputStream latexStream;
  
  private FileOutputStream htmlStream_EP;
  
  private FileOutputStream htmlStream_EL;
  
  private String latexOutput;
  
  private String htmlOutput_EP;
  
  private String htmlOutput_EL;
  
  public Object M2T() {
    return null;
  }
  
  public static void main(final String[] args) {
    final M2T m2t = new M2T();
    m2t.generate("folder", "file");
  }
  
  public void generate(final String folder, final String file) {
    try {
      File _file = new File("output/Test_EP+EL_Latex.tex");
      this.targetLatexFile = _file;
      this.targetLatexFile.createNewFile();
      FileOutputStream _fileOutputStream = new FileOutputStream(this.targetLatexFile);
      this.latexStream = _fileOutputStream;
      String _generateLatex = this.generateLatex();
      String _replaceAll = _generateLatex.replaceAll("\"", "");
      this.latexOutput = _replaceAll;
      byte[] _bytes = this.latexOutput.getBytes();
      this.latexStream.write(_bytes);
      this.latexStream.close();
      File _file_1 = new File("output/Test_EP_HTML.html");
      this.targetHtmlFile_EP = _file_1;
      this.targetHtmlFile_EP.createNewFile();
      FileOutputStream _fileOutputStream_1 = new FileOutputStream(this.targetHtmlFile_EP);
      this.htmlStream_EP = _fileOutputStream_1;
      String _generateHtmlSchedule = this.generateHtmlSchedule();
      this.htmlOutput_EP = _generateHtmlSchedule;
      byte[] _bytes_1 = this.htmlOutput_EP.getBytes();
      this.htmlStream_EP.write(_bytes_1);
      this.htmlStream_EP.close();
      File _file_2 = new File("output/Test_EL_HTML.html");
      this.targetHtmlFile_EL = _file_2;
      this.targetHtmlFile_EL.createNewFile();
      FileOutputStream _fileOutputStream_2 = new FileOutputStream(this.targetHtmlFile_EL);
      this.htmlStream_EL = _fileOutputStream_2;
      String _generateHtmlShoppingList = this.generateHtmlShoppingList();
      this.htmlOutput_EL = _generateHtmlShoppingList;
      byte[] _bytes_2 = this.htmlOutput_EL.getBytes();
      this.htmlStream_EL.write(_bytes_2);
      this.htmlStream_EL.close();
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
  
  /**
   * "Startmethode" der Latex-Generierung
   * ohne p erstmal !!!!!!!!!!
   */
  public String generateLatex() {
    StringConcatenation _builder = new StringConcatenation();
    String _generateLatexHead = this.generateLatexHead();
    _builder.append(_generateLatexHead, "");
    _builder.newLineIfNotEmpty();
    _builder.append("\\begin{document}");
    _builder.newLine();
    String _generateLatexSchedule = this.generateLatexSchedule();
    _builder.append(_generateLatexSchedule, "");
    _builder.newLineIfNotEmpty();
    _builder.append("\\newpage");
    _builder.newLine();
    String _generateLatexShoppingList = this.generateLatexShoppingList();
    _builder.append(_generateLatexShoppingList, "");
    _builder.newLineIfNotEmpty();
    _builder.append("\\end{document}");
    _builder.newLine();
    return _builder.toString();
  }
  
  public String generateLatexHead() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\\documentclass[10pt, a4paper]{article}");
    _builder.newLine();
    _builder.append("\\usepackage[a4paper, bottom=2.0cm, top=2.0cm]{geometry}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\\usepackage[utf8]{inputenc}");
    _builder.newLine();
    _builder.append("\\usepackage[ngerman]{babel}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\\pagestyle{empty}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\\parindent0pt");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\\usepackage{tabularx}");
    _builder.newLine();
    _builder.append("\\usepackage{multirow}");
    _builder.newLine();
    _builder.append("\\newcolumntype{C}{>{\\centering\\arraybackslash}X}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\\usepackage{pdflscape}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\\usepackage{ragged2e}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\\usepackage{enumitem} ");
    _builder.newLine();
    _builder.append("\\setitemize{leftmargin=*}");
    _builder.newLine();
    return _builder.toString();
  }
  
  /**
   * Generiert den Ernährungsplan für Latex.
   */
  public String generateLatexSchedule() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("\\begin{landscape}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("{\\Large \\textbf{Ernährungsplan}} \\medskip \\\\");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Max Mustermann \\\\");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Empfohlener Energiebedarf pro Woche: 14.000 Kalorien $\\rightarrow$ 2.000 Kalorien pro Tag \\medskip \\\\");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("%Da in diesem Ernährungsplan nur Mittagessen betrachtet werden, für die jeweils 1.000 kcal veranschlagt werden, stehen 2.000-1.000 = 1.000 kcal zur freien Verfügung. \\medskip \\\\");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("\\renewcommand*{\\arraystretch}{1.2}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("\\begin{tabularx}{\\linewidth}{|X|X|X|X|X|X|X|}\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\hline");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\Centering \\multirow{2}{*}{\\textbf{Montag}} & \\Centering \\multirow{2}{*}{\\textbf{Dienstag}} & \\Centering \\multirow{2}{*}{\\textbf{Mittwoch}} & \\Centering \\multirow{2}{*}{\\textbf{Donnerstag}} & \\Centering \\multirow{2}{*}{\\textbf{Freitag}} & \\Centering \\multirow{2}{*}{\\textbf{Samstag}} & \\Centering \\multirow{2}{*}{\\textbf{Sonntag}} \\\\");
    _builder.newLine();
    _builder.append("%\t\t&  &  &  &  &  &  \\\\");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("&  &  &  &  &  &  \\\\");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\hline");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Spaghetti Bolognese \\newline {\\scriptsize 1000 kcal} ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\itemsep0pt");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 100g Spaghetti");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 200g Bolognesesoße \\smallskip");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{scriptsize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Anmerkung: Gericht ist in Buch blablabla auf S.30 zu finden.");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{scriptsize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("& Gericht A \\newline {\\scriptsize 1000 kcal} ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\itemsep0pt");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 500g Kartoffeln");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 200g Rührei ");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 100g Spinat");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("& Pfannkuchen \\newline {\\scriptsize 500 kcal}  ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\itemsep0pt");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 300g Pfannkuchen");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("&  Gericht A \\newline {\\scriptsize 1000 kcal}  ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\itemsep0pt");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 500g Kartoffeln");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 200g Rührei ");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 100g Spinat");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("&  Gericht A \\newline {\\scriptsize 1000 kcal}  ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\itemsep0pt");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 500g Kartoffelbrei");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 200g Rührei ");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 100g Spinat");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("&  Gericht A \\newline {\\scriptsize 1000 kcal}  ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\itemsep0pt");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 500g Zungenragout");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 200g Rührei ");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 100g Spinat");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("&  Gericht A \\newline {\\scriptsize 1000 kcal}  ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\itemsep0pt");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 500g Kartoffeln");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 200g Rührei ");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 100g Rotkohl ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{small} ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\\\");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\hline");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("& & Salat \\newline {\\scriptsize 300 kcal} ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\itemsep0pt");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 500g Salat");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 50ml Dressing");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("& & & & Salat \\newline {\\scriptsize 300 kcal}  ");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\begin{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\itemsep0pt");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 500g Salat");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("\\item 50ml Dressing");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{itemize}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\end{small}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\\\");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("\\hline");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("\\end{tabularx} \\medskip \\\\ ");
    _builder.newLine();
    _builder.append("Für diese Woche wurden xxxxx von 14.000 kcal verbraucht. ");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\\end{landscape}");
    _builder.newLine();
    return _builder.toString();
  }
  
  /**
   * Generiert die Einkaufsliste für Latex.
   */
  public String generateLatexShoppingList() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("{\\Large \\textbf{Einkaufsliste}} \\medskip \\\\");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\\begin{itemize}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("\\item 100g Spaghetti ($\\rightarrow$ 100 = Mo + Di + Mi + ... + So)");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("\\item 500g Kartoffeln ");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("\\item ");
    _builder.newLine();
    _builder.append("\\end{itemize}");
    _builder.newLine();
    return _builder.toString();
  }
  
  /**
   * Generiert den Ernährungsplan für HTML.
   */
  public String generateHtmlSchedule() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<!DOCTYPE html>");
    _builder.newLine();
    _builder.append("<html lang=\"en\">");
    _builder.newLine();
    _builder.append("<head>");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<meta charset=\"utf-8\">");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<title>Ernährungsplan</title>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<!-- Bootstrap -->");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<link href=\"../html/css/bootstrap.min.css\" rel=\"stylesheet\">");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<link href=\"../html/css/style_EP.css\" rel=\"stylesheet\">");
    _builder.newLine();
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<!-- WARNING: Respond.js doesn\'t work if you view the page via file:// -->");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<!--[if lt IE 9]>");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("<script src=\"https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js\"></script>");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("<script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("<![endif]-->");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("</head>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<body>");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("<div class=\"container\">");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<div class=\"row\">");
    _builder.newLine();
    _builder.append("          ");
    _builder.append("<h1>Ernährungsplan</h1>");
    _builder.newLine();
    _builder.append("          ");
    _builder.append("<p>Max Mustermann <br />Empfohlener Energiebedarf pro Woche: 14.000 Kalorien &rarr; 2.000 Kalorien pro Tag</p>");
    _builder.newLine();
    _builder.append("          ");
    _builder.append("<table class=\"table table-bordered\">");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<thead>");
    _builder.newLine();
    _builder.append("              ");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<th>Montag</th>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<th>Dienstag</th>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<th>Mittwoch</th>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<th>Donnerstag</th>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<th>Freitag</th>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<th>Samstag</th>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<th>Sonntag</th>");
    _builder.newLine();
    _builder.append("              ");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("</thead>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("<tbody>");
    _builder.newLine();
    _builder.append("              ");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td>Spaghetti Bolognese <br /> <small>1000 kcal</small><br /> ");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("<ul>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>100g Spaghetti</li>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>200g Bolognesesoße</li>");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("</ul>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td>Gericht A <br /> <small>1000 kcal</small><br /> ");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("<ul>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>500g Kartoffeln</li>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>200g Rührei</li>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>100g Spinat</li>");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("</ul> ");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td>Pfannkuchen <br /> <small>500 kcal</small><br /> ");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("<ul> ");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>300g Pfannkuchen</li>");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("</ul>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td>Gericht A <br /> <small>1000 kcal</small><br /> ");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("<ul>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>500g Kartoffeln</li>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>200g Rührei</li>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>100g Spinat</li>");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("</ul> ");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td>Gericht A <br /> <small>1000 kcal</small><br /> ");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("<ul>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>500g Kartoffelbrei</li>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>200g Rührei</li>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>100g Spinat</li>");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("</ul> ");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td>Gericht A <br /> <small>1000 kcal</small><br /> ");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("<ul>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>500g Zungenragout</li>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>200g Rührei</li>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>100g Spinat</li>");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("</ul> ");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td>Gericht A <br /> <small>1000 kcal</small><br /> ");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("<ul>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>500g Kartoffeln</li>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>200g Rührei</li>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>100g Rotkohl</li>");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("</ul> ");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("              ");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("              ");
    _builder.append("<tr>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td></td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td></td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td>Salat <br /> <small>300 kcal</small><br /> ");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("<ul>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>500g Salat</li>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>50ml Dressing</li>");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("</ul>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td></td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td></td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td></td>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("<td>Salat <br /> <small>300 kcal</small><br /> ");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("<ul>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>500g Salat</li>");
    _builder.newLine();
    _builder.append("                    ");
    _builder.append("<li>50ml Dressing</li>");
    _builder.newLine();
    _builder.append("                  ");
    _builder.append("</ul>");
    _builder.newLine();
    _builder.append("                ");
    _builder.append("</td>");
    _builder.newLine();
    _builder.append("              ");
    _builder.append("</tr>");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("</tbody>");
    _builder.newLine();
    _builder.append("          ");
    _builder.append("</table>");
    _builder.newLine();
    _builder.append("          ");
    _builder.append("<p>Für diese Woche wurden xxxxx von 14.000 kcal verbraucht.</p>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("      ");
    _builder.append("<!-- jQuery (necessary for Bootstrap\'s JavaScript plugins) -->");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("<!-- Include all compiled plugins (below), or include individual files as needed -->");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("<script src=\"../html/js/bootstrap.min.js\"></script>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("</body>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("</html>");
    _builder.newLine();
    return _builder.toString();
  }
  
  /**
   * Generiert die Einkaufsliste für HTML.
   */
  public String generateHtmlShoppingList() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<!DOCTYPE html>");
    _builder.newLine();
    _builder.append("<html lang=\"en\">");
    _builder.newLine();
    _builder.append("<head>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<meta charset=\"utf-8\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<title>Einkaufsliste</title>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<!-- Bootstrap -->");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<link href=\"../html/css/bootstrap.min.css\" rel=\"stylesheet\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<link href=\"../html/css/style_EL.css\" rel=\"stylesheet\">");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<!-- WARNING: Respond.js doesn\'t work if you view the page via file:// -->");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("<!--[if lt IE 9]>");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("<script src=\"https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js\"></script>");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("<script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("<![endif]-->");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("</head>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<body>");
    _builder.newLine();
    _builder.append("  \t");
    _builder.append("<div class=\"container\">");
    _builder.newLine();
    _builder.append("  \t\t");
    _builder.append("<div class=\"row\">");
    _builder.newLine();
    _builder.append("  \t\t\t");
    _builder.append("<h1>Einkaufsliste</h1>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<ul>");
    _builder.newLine();
    _builder.append("          ");
    _builder.append("<li>100g Spaghetti</li>");
    _builder.newLine();
    _builder.append("          ");
    _builder.append("<li>500g Kartoffeln</li>");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("</ul>");
    _builder.newLine();
    _builder.append("  \t\t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("  \t");
    _builder.append("</div>");
    _builder.newLine();
    _builder.newLine();
    _builder.append("  \t");
    _builder.append("<!-- jQuery (necessary for Bootstrap\'s JavaScript plugins) -->");
    _builder.newLine();
    _builder.append("  \t");
    _builder.append("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>");
    _builder.newLine();
    _builder.append("  \t");
    _builder.append("<!-- Include all compiled plugins (below), or include individual files as needed -->");
    _builder.newLine();
    _builder.append("  \t");
    _builder.append("<script src=\"../html/js/bootstrap.min.js\"></script>");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("</body>");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("</html>");
    _builder.newLine();
    return _builder.toString();
  }
}
